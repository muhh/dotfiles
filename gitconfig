[user]
	name = Markus Heurung
	email = markus@freistil.it
[alias]
  co = checkout
  # Usage: git track origin/feature-123-login-form
  track = checkout -t
  cp = cherry-pick
  st = status -s
  cl = clone
  ci = commit
  co = checkout
  br = branch
  diff = diff --word-diff
  dc = diff --cached
  r = reset
  r1 = reset HEAD^
  r2 = reset HEAD^^
  rh = reset --hard
  rh1 = reset HEAD^ --hard
  rh2 = reset HEAD^^ --hard
  sl = stash list
  sa = stash apply
  ss = stash save
  ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
  lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
  ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
  le = log --oneline --decorate
  filelog = log -u
  fl = log -u
  dl = "!git ll -1"
  dlc = diff --cached HEAD^
  dr  = "!f() { git diff "$1"^.."$1"; }; f"
  lc  = "!f() { git ll "$1"^.."$1"; }; f"
  diffr  = "!f() { git diff "$1"^.."$1"; }; f"
  grep = grep -Ii
  gr = grep -Ii
  unstage = reset HEAD --
  staged = diff --cached
  unstaged = diff
  assume = update-index --assume-unchanged
  assumeall = "!git st -s | awk {'print $2'} | xargs git assume"
  unassume = update-index --no-assume-unchanged
  unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
  assumed = "!git ls-files -v | grep ^h | cut -c 3-"
  current-branch = !git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||'
  lasttag = describe --tags --abbrev=0
  lt = describe --tags --abbrev=0
  ours = "!f() { git co --ours $@ && git add $@; }; f"
  theirs = "!f() { git co --theirs $@ && git add $@; }; f"
[apply]
  whitespace = warn
[push]
	default = simple
[core]
	excludesfile = /Users/muhh/.gitignore_global
	editor = vim
[filter "media"]
	required = true
	clean = git media clean %f
	smudge = git media smudge %f
[alias "CHANGELOG"]
	md = Gemfile
[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
[filter "lfs"]
	clean = git lfs clean %f
	smudge = git lfs smudge %f
	required = true
[github]
	user = muhh
[color]
	diff = auto
	status = auto
  branch = auto
	ui = always
[help]
  autocorrect = 1
[status]
  submodule = 1
[mergetool]
	keepBackup = true
